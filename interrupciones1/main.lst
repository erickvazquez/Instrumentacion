CCS PCM C Compiler, Version 4.104, 5967               21-may.-20 13:11

               Filename: C:\Users\EHef_\Documents\OCTAVO-SEMESTRE-ESCOM\Instru\proyectosPic\interrupciones1\main.lst

               ROM used: 186 words (2%)
                         Largest free fragment is 2048
               RAM used: 14 (4%) at main() level
                         19 (5%) worst case
               Stack:    3 worst case (2 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   083
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16f877a.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #fuses hs, nowdt, noprotect, noput 
.................... #use delay(clock=4MHz) 
.................... #use rs232 (baud=6900, parity=N, xmit=pin_c6, rcv=pin_c7, bits=8) 
....................  
.................... int8 dato, dato1; 
....................  
....................  
.................... #int_timer0 
....................  
.................... void timer_0(){ 
....................    set_timer0(0); 
*
002F:  CLRF   01
.................... } 
....................  
0030:  BCF    0B.2
0031:  BCF    0A.3
0032:  BCF    0A.4
0033:  GOTO   01B
.................... void main() 
.................... { 
*
0083:  CLRF   04
0084:  BCF    03.7
0085:  MOVLW  1F
0086:  ANDWF  03,F
0087:  MOVLW  08
0088:  BSF    03.5
0089:  MOVWF  19
008A:  MOVLW  A2
008B:  MOVWF  18
008C:  MOVLW  90
008D:  BCF    03.5
008E:  MOVWF  18
008F:  BSF    03.5
0090:  BSF    1F.0
0091:  BSF    1F.1
0092:  BSF    1F.2
0093:  BCF    1F.3
0094:  MOVLW  07
0095:  MOVWF  1C
....................    setup_timer_0(rtcc_ext_h_to_l|rtcc_div_1); 
0096:  MOVF   01,W
0097:  ANDLW  C7
0098:  IORLW  38
0099:  MOVWF  01
....................    set_timer0(0); 
009A:  BCF    03.5
009B:  CLRF   01
....................    enable_interrupts(int_timer0); 
009C:  BSF    0B.5
....................    enable_interrupts(global); 
009D:  MOVLW  C0
009E:  IORWF  0B,F
....................    dato = get_timer0(); 
009F:  MOVF   01,W
00A0:  MOVWF  27
....................    dato1 = dato; 
00A1:  MOVF   27,W
00A2:  MOVWF  28
....................     
....................       while(true){ 
....................        
....................          dato = get_timer0(); 
00A3:  MOVF   01,W
00A4:  MOVWF  27
....................          if(dato != dato1) 
00A5:  MOVF   28,W
00A6:  SUBWF  27,W
00A7:  BTFSC  03.2
00A8:  GOTO   0B8
....................          { 
....................             printf("%3u\r\n", dato); 
00A9:  MOVF   27,W
00AA:  MOVWF  29
00AB:  MOVLW  13
00AC:  MOVWF  2A
00AD:  GOTO   049
00AE:  MOVLW  0D
00AF:  BTFSS  0C.4
00B0:  GOTO   0AF
00B1:  MOVWF  19
00B2:  MOVLW  0A
00B3:  BTFSS  0C.4
00B4:  GOTO   0B3
00B5:  MOVWF  19
....................             dato1 = dato; 
00B6:  MOVF   27,W
00B7:  MOVWF  28
....................          } 
....................        
....................        
....................        
....................       } 
00B8:  GOTO   0A3
.................... } 
00B9:  SLEEP

Configuration Fuses:
   Word  1: 3F7A   HS NOWDT NOPUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
